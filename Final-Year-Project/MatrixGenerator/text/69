in the begin of thi month of septemb the new chrome core ui redesign or so call chrome md for materi design roll out on window a part of our rd updat it is the last step of a three phase deploy of the new design which start in with chrome os and linux follow by maco in window is the culmin of that process and while chrome is never finish it felt to me like the right time to take a look back and reflect on thi process that almost took year hope deliv some detail and experi that might be use to you if you read my previou articl about redesign chrome for android thi one will be similar although i tri somewhat unsuccess to keep it lighter on the technic detail and it s onli in one part thi time if you didn t read it i d recommend it a it is an integr part of the think process for chrome desktop it chronolog successor i have been work on chrome and chrome os for almost year a a visual design while i wa split my time between the browser and the os i have been slowli transit to a full time role on chromeo over the past year back in one of my first big project a a new chrome team member wa to make the freshli redesign chrome core ui of the time compat with high resolut display such a the first macbook pro retina and the first chromebook pixel which wa sport googl s version of the retina display the chromebook pixel wa slate for a releas on februari a bit after the macbook pro as a noogler thi experi introduc me to the complex and intricaci of the chrome browser design it also gave me an acceler cours through all the design decis that have been made so far our goal at the time wa not onli to bring the new design to life on the upcom new screen resolut and densiti ratio x and x but also to rethink and facilit the way we collabor with engin by organ our workflow process and asset repositori thi need came out of the increas necess for chrome s design process to becom more futur proof the fast pace at which chrome grew sinc it birth didn t allow a lot of time for clean thing up along the way the more we move forward the hardest it becam to iter on our previou work creat delay and design debt after a few month of work follow the releas of the new design for regular resolut screen the shini new high definit came out thi is what it look like i took the opportun to take the inventori of our entir asset repositori bitmap for desktop and organ it to be abl to move faster in the futur thi would come in handi for what s to come thi design wa go to remain more or le in the same state for year until april date of the chrome materi design for chrome os releas now that chrome wa support high resolut screen and that our process ha been iron out and wa becom quit effici it wa time to switch our focu to mobil at the time begin of chrome wa yet to becom the default browser on android didn t have a tablet version and ha just been releas on io mobil becam my primari focu in the year separ the begin of and the chrome android materi design revamp of but it didn t mean that noth wa happen on the desktop side someth veri interest wa take shape we start see the desktop laptop landscap shift into a state where touchscreen were no longer the exclus attribut of mobil but also the one of more product platform such a laptop while there wa some attempt in the previou year it wa the first time the option of have a touchscreen on a laptop seem realist and more than a gimmick or an explor i had a close experi of that with the first chromebook pixel but anoth thing that trigger a lot of my interest at the time wa window and their veri strong commit to deliv a veri opinion ui on a new hybrid form factor with the surfac a a hero devic the dualiti of the os a well a the choic to go for a veri touchabl ui for both touchabl and non touchabl devic got me think about the place and direct of the chrome ui in thi type of environ we alreadi had to face thi type of question with the first chromebook pixel and it touchscreen but the choic wa made to reli on touchscreen for content scroll and secondari interact onli rather than a primari method of input the posit of the pixel a a veri experiment and for enthusiast devic allow u to take our time to think about it whi and how our ui should be impact after some time we decid to creat what will becom the precursor of today s hybrid mode touch view touch view wa a modif of the normal core ui to allow the core element to be more space out limit the amount of user touch error thi wa deploy on some chromebook and on window it wa an interest experi and while it didn t last veri long touch view on window be rapidli cancel and window itself be re thought to what wa go to becom window it wa enough to offer a glimps at what wa come on the horizon the democrat of hybrid or convert devic and the slow but steadi blur of the line between tablet and laptop fast forward to the end of a lot of thing happen in the system design landscap appl announc yosemit with it ui style close the gap between maco and io and lollipop wa about to be releas use the new googl visual design languag materi design the design landscap wa evolv and while compani were follow their own guidelin a common theme wa emerg the skeuomorph era wa end replac by a lighter ui character by more white space diminish use of strong shadow and what a lot of u commonli dub a the famous or infam flat design era window had it modern ui appl it io ui and googl it materi design as part of thi big updat cycl chrome receiv a revamp of it mobil properti io and android we said goodby to our strong shadow highlight and nois effect on top of our gradient we sharpen our tab and select a set of icon consist with the googl design guidelin the new chrome wa here just not yet on desktop the desktop ui futur wa slowli take shape and clearer opinion on the matter were form window and googl on one side tri to figur out a design system capabl on handl all screen size and format at onc appl on the other with opinion layout direct work on a per platform and per format basi touch for io non touch for maco it is at that time almost two year from now that the chrome desktop redesign process start a constant a non trivial thing i had to take care of dure my year work on chrome and that most design deal with is asset manag there s a reason i previous mention organ our bitmap asset on desktop beyond it be incred fun s it is a necess when work across platform from an front end engin perspect chrome is spread across framework codebas view share by window chrome os and linux our framework to build the ui cocoa on maco java for android and obj c swift for io to keep our saniti and to enabl better long term asset manag we tri to share a much design resourc a possibl across platform for exampl window chrome os and mac share a lot of common visual they might be implement differ but the bitmap are the same on mobil and while chrome for android and io are differ in mani way we also tri to design and conceiv asset to be cross platform chrome for tablet is a good exampl of that whether you launch chrome on ipad or an android tablet they will look veri similar of cours there are a good amount of platform specif resourc but thi solid system of share element reach it limit and when you have to deal with multipli and form factor or layout type it get tricki befor even consid hybrid the landscap look a the follow as you can see there is a set of layout type touch and non touch among these two layout type are core multipli x and x for an extend total of to multipli per platform for mobil for desktop in extrem case on window thi is a lot of multipli and asset to creat so much so that we end up reli on scale for odd multipli creat le than ideal render in thi context and with the climb demand for touchabl and convert devic we were go to have to find a solut for convert devic inspir by touch view that we were go to name hybrid ad more complex to our exist structur thi had the potenti of creat yet a new set of asset to export and manag push our current bitmap base process far beyond it limit thi is were programmat render come in chrome hybrid mode wa origin design for chomebook inspir by our previou effort touch view thi time we need to creat hybrid a part of the redesign effort and not a an addit to an alreadi exist ui to do so we need two thing the solut to our second problem came through the effort of peter kast evan stade and terri anderson tech lead on the project i initi wasn t convinc that render shape especi chrome tab and icon entir programmat wa go to achiev the level of detail that we would be abl to deliv with png i wa wrong chrome is use the skia graphic librari after a few tri peter wa abl to render key chrome element such a tab and omnibox perfectli without use ani type of bitmap on hi side evan creat a convert abl to translat svg code to skia code svg would essenti serv a a blueprint a set of instruct for code render the design to engin process wa then defin a follow design would creat svg at ani size desir to serv a a templat for the skia code render thi appli to both shape and icon engin would then take thi templat and implement it in chrome use skia here s a schemat of the tab tab are made of one svg for the fill and anoth one for the stroke engin then take the svg code and chang their path to skia code ad proper color and opac here s a code preview with the exampl of an icon use the auto convers tool evan put togeth thi techniqu result in a huge decreas in the number of bitmap use in chrome from around to keep in mind that all variant of button are now handl via code effect remov ani duplic for hover press state a well a ani need to appli color directli on the asset all of thi would be handl in code the bonu and huge advantag over use svg directli is that we are abl to control the render of each element on a per ppi basi thi mean that we can creat an icon slightli differ from x to x if need be thi is a huge deal a desktop is still majoritarili x in addit we would also be abl to control render for decim multipli like etc make chrome look a good a we can get in all odd ppi configur with thi new awesom tool and process in place it wa time to design and implement the new ui the redesign of the desktop ui wasn t about start from scratch a much a bridg the gap between our new design languag on mobil and our age desktop visual a question that i think ha been in the mind of all chrome visual design at one point is what make chrome chrome the key element when you think about our core ui are the tab and icon chrome mobil wa alreadi use the new sharp tab edg on tablet and wa also use the new icon system deriv from the materi design guidelin in thi context our goal wa to there is one key thing to rememb when design chrome s core layout ui footprint it s the exact amount of pixel we use to display our ui or in other word the amount of pixel we take away from the content the height of the pre md design when the bookmark bar wasn t display wa px on chrome os and maco includ the window frame and px on window includ the frame a well the nativ frame on window is taller than it chromeo and maco counterpart it make the frame easier to click and grab at the cost of a bigger footprint see a comparison on maco with window below pre md thi previou version of the chrome toolbar layout wa creat when high ppi screen didn t exist so it wa optim for render at scale use odd number so you could center element on a full pixel the first thing that need to be done wa use an even grid so that carri the layout throughout variou multipli would be easier thi way icon would fall on the pixel grid more often by comparison with an odd number base design grid materi design us pt a it baselin we are use half a small pt set a grid and posit element by increment of pt tremend help get a good balanc and keep the layout iconographi and typographi consist throughout to achiev balanc we split the ui in half tab window frame toolbar thi is what it look like for the regular ui as you can see on thi or x preview of chrome md on chrome os the toolbar is split in two part of pt each each core element fall on the pt grid tab are pt equal to the omnibox height we leav an pt top pad between the tab and the top of the frame if you look close you might have notic that the omnibox stroke are not align on the grid in thi preview the reason is that we use px a line weight regardless of the ppi creat a lighter ui with thinner stroke the downsid of thi techniqu is that you alway need to rememb that the space which wa suppos to be fill by the thicker px stroke is now an empti space you might also have notic that we render the stroke by ad pt at the bottom of the toolbar rather than inset it for balanc reason effect ad pt to the pt pt total height on the left is our hybrid ui for hybrid we maintain the frame pad pt while increas the tab and toolbar footprint by pt the result is a more space out layout you might wonder at thi point whi we do not simpli match the android or io touch target recommend and respect to make thing touchabl we actual tri thi but go against what hybrid is tri to achiev on desktop everi pixel count deliv the tablet ui on a laptop wa out of the question follow is a comparison between chrome pre md chrome md normal layout hybrid and final tablet all render at xhdpi for android effect the md normal layout footprint includ the window frame is px taller than it pre md chromeo maco counterpart v howev becaus we move the ui up by px in the window frame the new ui not count the window frame we get a ui effect px taller v thi logic also appli to icon the choic wa quickli made a to what set of icon to use we need to revamp our numer core ui icon a well a all the featur icon spread across the product and the materi design icon repositori offer just that that way they would also be fulli consist with the icon on our mobil properti both io and android howev one problem remain grid size the x pt base grid wasn t realli fit the rather condens ui we were plan to creat even includ hybrid after all they were conceiv for mobil we need to deriv a grid that would fit our new normal and hybrid ui to do so and to match our pt grid we use x pt base icon a describ in the follow preview we reduc the contain from pt to pt and ad some flexibl around the initi intern pad pt chang to pt to pt depend on the icon for the chrome icon grid the reason for thi flexibl pad is that consid the wide varieti of icon we were go to use some might requir extra space to make their path work visual at small size the advantag of thi straight reduct in size is that we were go to be abl to also use scale straight from the materi icon thi would drastic improv our icon deliveri time and increas scale abil at the cost of some icon be render off grid and therefor slightli blurri while thi would be fine on secondari icon all our most promin icon had to be render properli and a pixel perfect a possibl to that end we would re creat them to avoid ani off grid pixel especi on lower ppi see our back icon below as you can see sinc we have control of the render on ani given pp we remov the scale induc blurri of the icon we also made the icon line weight slightli thinner px on and px one from the initi px in and px in a i thought the weight wa slightli too high thi way they are more eleg and balanc within our ui thi techniqu offer both flexibl and control over our asset realli reduc our visual mainten cost reli on an alreadi exist huge set of asset wa also a huge time saver for our featur team capabl of iter faster on their featur icon without have to wait on a design to creat a custom icon final it brought consist between mobil and desktop sinc these were render programmat we also delet all duplic for color state all we have to deliv is a black svg and paint the requir color in code a nice ad bonu of programmat render is that we are abl to cut and badg the icon when need for block extens and permiss for exampl instead of export the block and non block variant a separ bitmap see the process spec below below is a preview of the new unifi iconographi system with color and badg version thi give you a sens of the system a a whole now that the icon creation process is iron out let s see how they fit within the ui sinc the icon are base on a x pt layout that fit perfectli the pt grid determin earlier place them and space them in the ui wa just a matter of figur out the proper size of touch click target for both normal and hybrid mode in normal mode we went for x pt touch target hold x pt icon of cours the follow space are consist throughout all chrome normal layout regardless of the platform below is chrome in chromeo for hybrid concess had to be made a to how much we want the ui to grow we want to offer the user more space while maintain a compact layout which explain whi some element had to break off the grid a you ll see below as we were still tri the theori behind thi layout we were a bit more conserv what i kept repeat to myself dure the make of thi layout wa that the user shouldn t feel too uncomfort use it with mous onli it shouldn t wast space we first focus on increas the height of element for which we alreadi had identifi the most pain point the tab and the omnibox we both increas them to pt from in addit we use a techniqu that increas the touch area of the tab into the frame itself ad pt of addit touch target size while icon kept their x pt touch target we increas their surround margin to pt give the ui more space and reduc user touch error same principl appli to icon within the omnibox extens and permiss a well a extens icon you can notic that while the space chang icon remain the exact same size we use x pt iconographi throughout thi minim the amount of design asset requir mainten make long term scalabl a well a featur iter easier see what the complet hybrid core ui look like below align all icon to be the same size tremend streamlin our mainten and design process and made the design more uniform and eleg previou non md icon were creat over a period of sever year which made it hard to maintain a consist set of size thi time we even updat our extens icon requir to be x pt instead of the previou x pt we also redefin the way badg work follow the same crop techniqu we use for block permiss final for user who like to alway show their bookmark bar we tweak it a well so it doesn t unbal or overpow both layout see exampl below with mac for normal layout window and chrome os for hybrid mac append pt to it normal footprint to match the toolbar button x pt click target window and chrome os in normal or hybrid oper slightli differ we append a pt high bookmark bar to balanc the extra height of the window frame sinc chromeo us the same implement a window it inherit thi same measur as we are still experi with thi layout on chromeo time will tell if aim for the right balanc between touch and non touch will pay off thi is whi until we get a better understand of our user habit and need on the the window platform we will ship the normal layout by default for all window devic chromeo touch abl devic will howev get hybrid by default if you want to tri it for yourself simpli head to the chrome flag section chrome flag and set the ui layout in the browser s top chrome flag to touch there are two tenant to our omnibox and dropdown layout design the omnibox is probabl the most import featur of chrome it is our user gateway to googl search result the web a well a their own bookmark and histori it is also the onli place where we can indic strongli the secur state of a domain effect tri to protect our user against a myriad of onlin threat through activ block passiv indic and educ to that goal visual design max walker a been work hand in hand with chrome ux lead alex ainsli and chrome secur to add a new revamp secur indic system to our omnibox which go a follow max align the typographi of the certif with the url text and use our new color scheme he also revamp our lock give them a light look in direct relationship with thi is the omnibox dropdown or the contain of the result you get when type a queri the dropdown wasn t drastic chang in the context of thi revamp we chang the iconographi along with the color scheme but the core of our work is repres in two chang a new layout for hybrid and more importantli inlin answer inlin answer also name answer in suggest is essenti googl or chrome display the inform you are look for befor you actual hit enter to valid the queri for exampl when you type weather in lo ang in the omnibox chrome wa suggest you the follow now with answer in suggest if we are sure to have the answer you are look for we display it a part of the result as you can see below it doesn t onli appli to the weather but also quick queri stock search a well a calcul thi is what thi queri look like in normal layout and here s the differ with anoth queri stock queri thi time in the hybrid layout with improv row height for touch abil the omnibox dropdown on desktop alway offer veri tight row regardless of the platform it is a balanc between inform densiti clariti and eas of use to get the user from queri to result a fast a possibl just like for the other core ui featur hybrid is about reduc user touch error by increas the height of each row while maintain high inform densiti to avoid too much travel for the user s eye and therefor more time to access content beyond layout densiti anoth element with a lot of influenc is color chrome md for desktop went through the same mutat chrome for android did we need a more unifi color guidelin a well a a consist and more importantli access color scheme of cours the most promin chang you notic when open chrome is the core ui color chang itself balanc the color of the core ui is a task requir some subtleti more than i thought it would at first the core ui is form of three key element to work well these three thing need to have a proper amount of contrast someth that wasn t easi to solv wa how to bring the design to a flatter more modern look within compromis too much on the contrast anoth thing we need to think about wa theme contrarili to mobil desktop support theme we need to account for that and improv on it if possibl final my person favorit we want to make incognito mode realli differ instead of theme onli the frame we want to complet chang it global theme make it veri dark just like it mobil counterpart here s chrome three level structur for both mode our core ui color system is a follow mac and chrome os are pretti straight forward a we control the color of the os frame directli simpli ad the background blur on mac window is a bit trickier a the user or system can set pretti much ani color a their frame color therefor we continu what we ve been do so far play with opac to blend our color with whatev the system show see comparison below while mac and chrome os inact tab us an opaqu color we reduc the fill of inact tab and new tab button to on window to balanc the new color theme we reli heavili on the use of stroke sinc the stroke have a px weight regardless of ppi their opac have been tweak a lot so that they do not look too dark in x or too light in x thi go for normal and incognito mode access ha alway been part of chrome s dna whether it s on the content side with a y complianc or on the ui side in the past two year thi effort grew even stronger admittedli on the visual side our color scheme need a new pa to make it both simpler and compliant to the wcag rule for good contrast we made sure that all our typographi a well a iconographi reach at least aa level or contrast ratio directli relat our programmat render enabl u to color our icon dynam base on the contrast ratio which not onli mean that the theme creat for chrome will look better but also that access will be improv a well as you can see below instal the theme dark theme v make the icon switch to white and the dropdown automat switch to dark mode thi is a direct benefit we get from programmat render and our incognito mode implement motion is a big part of what peopl think of when describ materi design especi on mobil good motion design on thi form factor can realli make an app shine and empow it user to use it more effect provid you are not over do it you a a design can provid delight a well a guidanc and spatial awar use subtl hint and opinion and clear ui movement but when it come to desktop and it mous and keyboard first larg screen environ it s a slightli differ stori desktop is a platform you will like engag with for a higher amount of time than mobil usual use product tool in favor of a deeper experi a oppos to the quick on the go or more lean back mobil experi as much a we would like touch and non touch platform to be more consist in their paradigm and attribut someth that might seem necessari and engag on mobil can becom an annoy if not a hindranc to the task you are tri to accomplish on desktop chrome desktop ha alway been about effici and execut speed no motion should get in the way of you accomplish your task which is whi most ui surfac appear with no delay or with the minim amount of motion take our omnibox dropdown for exampl a bit of motion might seem nice at first but when you access it more than a hundr time a day you are quickli go to hate u for that extra bit of time we are take away from you simpli to show a hypothet slide anim with fade in thi is whi we make it appear instantli like our menu so how do you get some materi design delight on a platform that seem so hostil to motion well you tri to add it to piec of the ui that will not be affect by it thi is whi we play with rippl effect on our button there is a lot to a click action on desktop and there is even more when you combin that with the touch abil of hybrid devic some of the state do not even exist on mobil they go a follow we base all our motion on the materi design rippl burst a simpl burst of color grow out from the the click or tap locat sinc hover state didn t exist in the md spec the first thing we had to do wa combin it with the rippl we make the rippl burst out of the squar hover state push it boundari outward in the case of a simpl hover singl click with no activ state it look like thi thi is what it look like in our toolbar for singl click to activ and long click press to activ we need to combin the rippl with the common final state of the button the activ state which is a grey round rectangl similar to our hover state to do so we work with the materi design team to explor some morph effect on the rippl thi is a mobil explor appli to the desktop and for the singl click to activ we maintain the rippl expans spread but onc the rippl reach it apoge we morph it into a squar instead of let it burst it look like thi the long click tap to activ is veri similar onli thi time we slow down the expans of the rippl lastli for our bookmark bar we implement a flood rippl thi type of rippl is an expand ellips fill up a contain area in our case we combin the rippl with the hover state to creat the activ state of our bookmark like shown below quick note we decid not to carri rippl effect to maco a they felt a littl out of place on thi platform we chose os consist here on the engin side ben ruthig wa behind the accomplish of re build the rippl system from scratch on our desktop platform on the design side initi motion preview and spec were quickli put togeth use hype the video you saw abov were done use thi tool the veri high level natur of thi type of prototyp enabl u to jump in real code fast rather than spend cycl iter on prototyp we use prototyp a a gener direct instead of a definit spec as the code vastli vari from web to c direct engin input and tryout earli on wa invalu after the complet of the implement readi spec and mock for the core ui i dabbl a bit in chrome s secondari ui we includ in that categori everi chrome element not directli visibl such a menu dialog bubbl button info bar find in page and download shelf some might have roll out alreadi some might be come soon i won t show it here not to spoil futur updat but if you are an avid chrome user you might have enabl a few flag show that the chrome team is work hard to bring a polish new experi to the secondari ui a well a for the chrome inner page like the one below as my involv in the chrome browser is end with thi core ui project i m excit to see what the chrome team ha for the futur of chrome on desktop and mobil as a close note i d like to share some of the lesson i learn dure thi project a well a some releas reaction both intern and extern hope that these will be help to you in your project we talk a lot in our design circl about if and whi a design should code there are a lot of diverg opinion on the matter and it come from the fact that there is no simpl definit of the role of a design howev we talk le of the opposit should engin design in the end they are the maker and to a certain extent the design of your product the one who make it becom a real thing sometim a a design i feel like all that we do is tri to fake or mimick the end result cut to the chase a fast a possibl to tri thing in the real environ in real code is essenti in thi project a lot of my assumpt were broken by engin who not onli brought better solut to the tabl but execut and iter on the design better that i could ever do i m think more specif of programmat render an effort champion by peter kast and motion design lead by ben ruthig their code knowledg wa crucial in get the design right and more than onli chang the design it chang the natur of the project from a visual revamp of the ui to a core rewrit in the present case they were involv right away and were an integr of the design and concept process as i mention earlier their motiv to deliv better design through better engin solut made the product what it is today maintain constant commun wa key to bring the right design to life deliv extrem precis spec work is necessari howev in some case leav your preliminari work open for feedback and new idea can bring your design to anoth level as long a your end design stay true to it origin goal or intent let other enter your process and improv on your design when you are redesign a product especi if it ha been around for a while you will run into what a lot of u have encount chang avers now be care sometim your design might actual be bad but in a lot of case the simpl act of chang someth is suffici to trigger moder to extrem reaction from your user it can be extrem hard to receiv and extrem hard to fight for thi redesign ad a few pixel trigger lengthi discuss or debat i won t lie i do not have the miracl solut to it but there are thing that you can do to minim chang avers when the updat start to roll out the hardest feedback i receiv wa that s it it s a fair feedback in my opinion the project took time and it s not a visual revolut i like to think that if you look into the detail you might start to see how much attent and care we put into it the biggest improv brought by thi redesign project are under the hood it is an engin achiev most and foremost i do hope that the benefit will be felt over time both in our team and with our user a chrome ha never been so flexibl and consist across our support platform thank for read so far if you want to reach out feel free to connect on twitter or anywher els if you want to connect with the chrome design team these are cool peopl to follow on twitter alex ainsli chri lee max walker rachel ilan simpson peter schaffner hannah lee glen murphi the awesom engin team behind thi work peter kast ben ruthig evan stade terri anderson valeri arkhangoroski jayson adam design at googl chrome browser chrome os googl design is a cooper effort led by a group of design writer and develop at googl we work across team to creat tool resourc event and public that support and further design and technolog both insid and outsid of googl 